AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for an AWS Lambda function to invoke Amazon Bedrock and generate book reviews.

Resources:
  # IAM Role for Lambda Execution
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement: 
          - Effect: Allow
            Principal: 
              Service: 
                - lambda.amazonaws.com
            Action: 
              - sts:AssumeRole
      Policies: 
        - PolicyName: LambdaBedrockPolicy
          PolicyDocument: 
            Version: '2012-10-17'
            Statement: 
              - Effect: Allow
                Action: 
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - bedrock:InvokeModel
                Resource: "*"
  
  # Lambda Function Definition
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.8
      Code:
        ZipFile: |
          import json
          import boto3

          def handler(event, context):
              client = boto3.client('bedrock')
              response = client.invoke_model(
                  ModelId='your-model-id',
                  InputText=json.dumps({"prompt": "Generate a book review for 'The Great Gatsby'."})
              )
              return {
                  'statusCode': 200,
                  'body': json.loads(response['Payload'].read())
              }
      Timeout: 30
  
  # S3 Bucket with Event Trigger for Lambda
  S3Trigger:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-book-reviews-bucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt MyLambdaFunction.Arn

  # Lambda Permission to Allow S3 to Invoke Lambda
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt MyLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt S3Trigger.Arn

Outputs:
  LambdaFunctionArn:
    Description: "ARN of the Lambda function for generating book reviews"
    Value: !GetAtt MyLambdaFunction.Arn
  S3BucketName:
    Description: "Name of the S3 bucket for book review uploads"
    Value: !Ref S3Trigger
